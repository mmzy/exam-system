<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.exam.mapper.ExamhisMapper" >
  <resultMap id="BaseResultMap" type="com.exam.pojo.Examhis" >
    <id column="studentId" property="studentid" jdbcType="VARCHAR" />
    <id column="subjectId" property="subjectid" jdbcType="INTEGER" />
    <id column="examTime" property="examtime" jdbcType="TIMESTAMP" />
    <result column="studentName" property="studentname" jdbcType="VARCHAR" />
    <result column="subjectName" property="subjectname" jdbcType="VARCHAR" />
    <result column="classesId" property="classesid" jdbcType="INTEGER" />
    <result column="classesName" property="classesname" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="publishExamId" property="publishexamid" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.exam.pojo.Examhis" extends="BaseResultMap" >
    <result column="examTest" property="examtest" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    studentId, subjectId, examTime, studentName, subjectName, classesId, classesName, 
    score, status, publishExamId
  </sql>
  <sql id="Blob_Column_List" >
    examTest
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.exam.pojo.ExamhisExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from examhis
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.exam.pojo.ExamhisExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from examhis
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="com.exam.pojo.ExamhisKey" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from examhis
    where studentId = #{studentid,jdbcType=VARCHAR}
      and subjectId = #{subjectid,jdbcType=INTEGER}
      <if test="examtime != null" >
        and examTime = #{examtime,jdbcType=TIMESTAMP}
      </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.exam.pojo.ExamhisKey" >
    delete from examhis
    where studentId = #{studentid,jdbcType=VARCHAR}
      and subjectId = #{subjectid,jdbcType=INTEGER}
      and examTime = #{examtime,jdbcType=TIMESTAMP}
  </delete>
  <delete id="deleteByExample" parameterType="com.exam.pojo.ExamhisExample" >
    delete from examhis
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.exam.pojo.Examhis" >
    insert into examhis (studentId, subjectId, examTime, 
      studentName, subjectName, classesId, 
      classesName, score, status, 
      publishExamId, examTest)
    values (#{studentid,jdbcType=VARCHAR}, #{subjectid,jdbcType=INTEGER}, #{examtime,jdbcType=TIMESTAMP}, 
      #{studentname,jdbcType=VARCHAR}, #{subjectname,jdbcType=VARCHAR}, #{classesid,jdbcType=INTEGER}, 
      #{classesname,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{publishexamid,jdbcType=INTEGER}, #{examtest,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.exam.pojo.Examhis" >
    insert into examhis
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentid != null" >
        studentId,
      </if>
      <if test="subjectid != null" >
        subjectId,
      </if>
      <if test="examtime != null" >
        examTime,
      </if>
      <if test="studentname != null" >
        studentName,
      </if>
      <if test="subjectname != null" >
        subjectName,
      </if>
      <if test="classesid != null" >
        classesId,
      </if>
      <if test="classesname != null" >
        classesName,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="publishexamid != null" >
        publishExamId,
      </if>
      <if test="examtest != null" >
        examTest,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentid != null" >
        #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="subjectid != null" >
        #{subjectid,jdbcType=INTEGER},
      </if>
      <if test="examtime != null" >
        #{examtime,jdbcType=TIMESTAMP},
      </if>
      <if test="studentname != null" >
        #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="subjectname != null" >
        #{subjectname,jdbcType=VARCHAR},
      </if>
      <if test="classesid != null" >
        #{classesid,jdbcType=INTEGER},
      </if>
      <if test="classesname != null" >
        #{classesname,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="publishexamid != null" >
        #{publishexamid,jdbcType=INTEGER},
      </if>
      <if test="examtest != null" >
        #{examtest,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.exam.pojo.ExamhisExample" resultType="java.lang.Integer" >
    select count(*) from examhis
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update examhis
    <set >
      <if test="record.studentid != null" >
        studentId = #{record.studentid,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectid != null" >
        subjectId = #{record.subjectid,jdbcType=INTEGER},
      </if>
      <if test="record.examtime != null" >
        examTime = #{record.examtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.studentname != null" >
        studentName = #{record.studentname,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectname != null" >
        subjectName = #{record.subjectname,jdbcType=VARCHAR},
      </if>
      <if test="record.classesid != null" >
        classesId = #{record.classesid,jdbcType=INTEGER},
      </if>
      <if test="record.classesname != null" >
        classesName = #{record.classesname,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.publishexamid != null" >
        publishExamId = #{record.publishexamid,jdbcType=INTEGER},
      </if>
      <if test="record.examtest != null" >
        examTest = #{record.examtest,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update examhis
    set studentId = #{record.studentid,jdbcType=VARCHAR},
      subjectId = #{record.subjectid,jdbcType=INTEGER},
      examTime = #{record.examtime,jdbcType=TIMESTAMP},
      studentName = #{record.studentname,jdbcType=VARCHAR},
      subjectName = #{record.subjectname,jdbcType=VARCHAR},
      classesId = #{record.classesid,jdbcType=INTEGER},
      classesName = #{record.classesname,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      publishExamId = #{record.publishexamid,jdbcType=INTEGER},
      examTest = #{record.examtest,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update examhis
    set studentId = #{record.studentid,jdbcType=VARCHAR},
      subjectId = #{record.subjectid,jdbcType=INTEGER},
      examTime = #{record.examtime,jdbcType=TIMESTAMP},
      studentName = #{record.studentname,jdbcType=VARCHAR},
      subjectName = #{record.subjectname,jdbcType=VARCHAR},
      classesId = #{record.classesid,jdbcType=INTEGER},
      classesName = #{record.classesname,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      publishExamId = #{record.publishexamid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.exam.pojo.Examhis" >
    update examhis
    <set >
      <if test="studentname != null" >
        studentName = #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="subjectname != null" >
        subjectName = #{subjectname,jdbcType=VARCHAR},
      </if>
      <if test="classesid != null" >
        classesId = #{classesid,jdbcType=INTEGER},
      </if>
      <if test="classesname != null" >
        classesName = #{classesname,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="publishexamid != null" >
        publishExamId = #{publishexamid,jdbcType=INTEGER},
      </if>
      <if test="examtest != null" >
        examTest = #{examtest,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where studentId = #{studentid,jdbcType=VARCHAR}
      and subjectId = #{subjectid,jdbcType=INTEGER}
      and examTime = #{examtime,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.exam.pojo.Examhis" >
    update examhis
    set studentName = #{studentname,jdbcType=VARCHAR},
      subjectName = #{subjectname,jdbcType=VARCHAR},
      classesId = #{classesid,jdbcType=INTEGER},
      classesName = #{classesname,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      publishExamId = #{publishexamid,jdbcType=INTEGER},
      examTest = #{examtest,jdbcType=LONGVARCHAR}
    where studentId = #{studentid,jdbcType=VARCHAR}
      and subjectId = #{subjectid,jdbcType=INTEGER}
      and examTime = #{examtime,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.exam.pojo.Examhis" >
    update examhis
    set studentName = #{studentname,jdbcType=VARCHAR},
      subjectName = #{subjectname,jdbcType=VARCHAR},
      classesId = #{classesid,jdbcType=INTEGER},
      classesName = #{classesname,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      publishExamId = #{publishexamid,jdbcType=INTEGER}
    where studentId = #{studentid,jdbcType=VARCHAR}
      and subjectId = #{subjectid,jdbcType=INTEGER}
      and examTime = #{examtime,jdbcType=TIMESTAMP}
  </update>
  
     <select id="selectStudentById" parameterType="string" resultType="com.exam.pojo.Examhis" >
   SELECT * FROM examhis WHERE studentid = #{id}
  </select>
  
  <select id="selectStudentByClassesName" parameterType="string" resultType="com.exam.pojo.Student" >
    SELECT * FROM student
	WHERE classesName = #{name}
	ORDER BY id
  </select>
  
  <select id="selectClassesByClassesName" parameterType="string" resultType="com.exam.pojo.Examhis" >
    SELECT * 
FROM examhis
WHERE classesName = #{name}
ORDER BY studentid,subjectid
  </select>
  
  <select id="selectSubjectByClassesName" parameterType="string" resultType="com.exam.pojo.Examhis" >
    SELECT MIN(subjectid) AS 'subjectid', subjectname  
FROM examhis 
WHERE classesName = #{name}
GROUP BY subjectid 
ORDER BY subjectid
  </select>
</mapper>